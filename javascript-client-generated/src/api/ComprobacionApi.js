/*
 * Incident Management API
 * API para la gesti√≥n de incidentes, partes de seguros y evidencias.
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.68
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from "../ApiClient";
import Comprobacion from '../model/Comprobacion';

/**
* Comprobacion service.
* @module api/ComprobacionApi
* @version 1.0.0
*/
export default class ComprobacionApi {

    /**
    * Constructs a new ComprobacionApi. 
    * @alias module:api/ComprobacionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the comprobarGet operation.
     * @callback moduleapi/ComprobacionApi~comprobarGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Comprobacion{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Consulta si los datos proporcionados inicialmente por el usuario son correctos
     * @param {String} cliente 
     * @param {Number} seguro 
     * @param {Number} poliza 
     * @param {module:api/ComprobacionApi~comprobarGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    comprobarGet(cliente, seguro, poliza, callback) {
      
      let postBody = null;
      // verify the required parameter 'cliente' is set
      if (cliente === undefined || cliente === null) {
        throw new Error("Missing the required parameter 'cliente' when calling comprobarGet");
      }
      // verify the required parameter 'seguro' is set
      if (seguro === undefined || seguro === null) {
        throw new Error("Missing the required parameter 'seguro' when calling comprobarGet");
      }
      // verify the required parameter 'poliza' is set
      if (poliza === undefined || poliza === null) {
        throw new Error("Missing the required parameter 'poliza' when calling comprobarGet");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'cliente': cliente,'seguro': seguro,'poliza': poliza
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Comprobacion;

      return this.apiClient.callApi(
        '/comprobar', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}